{
  "title": "Jewell",
  "description": null,
  "tags": null,
  "aliases": null,
  "published": true,
  "body": {
    "raw": "Jewell is indeed a thing of great value; a more or less Terra-Prime world marred only by a slight atmospheric taint caused by volcanic outgassing. With very similar gravity and weather conditions to Earth, the world was highly suitable for colonisation. The first settlement was established around 320 and conducted in an ad-hoc manner without Imperial oversight.\n\nIt was the discovery of Lanthanum deposits, some time later, that caused a much more focussed colonisation programme to be launched, leading to industrialisation and a rapid advance in technological sophistication. Jewell was used as a forward base for further expansion into the Cronor subsector.\n\nAs tensions with the Zhodani Consulate grew, a squadron of naval vessels was deployed to the Jewell system and a base was set up to support them. This was a small installation, which was donated to the Scout Service when the Navy built a much larger base around 480.\n\nA larger scout base was deployed a few years later and the original naval facility abandoned for a long time. Scout vessels from this base worked the communications route back into Regina via Efate and conducted both exploration and intelligence-gathering operations along the frontier. The Navy meanwhile engaged in cold war operations along the border, shadowing Zhodani ships and trying to intimidate the Consulate.\n\nWhen conflict inevitably occurred, Jewell was on the front line. The system squadron and Imperial Navy forces put up a valiant fight but could not prevent the capture of the world by the Consulate in 592. Some sources claim that Grand Admiral Olav Hault-Plankwell personally led the campaign to retake the world in 603, although others disagree. Contrary to popular docu-drama cliché, he certainly did not take part in the ground fighting to retake the downport.\n\nJewell was strongly garrisoned after the war and has remained so ever since. During the Second Frontier War, the world came under siege for several months in 617 but held out successfully. Afterward, the scale of the world’s defences was increased yet again, with the original naval base re-opened and several other facilities constructed throughout the system. Although attacked in the Third and Fourth Frontier Wars, Jewell was able to not only repel the assault fleets but act as a base for operations into the Zhodani rear, gaining the world the somewhat fanciful media nickname of Jewell: Shining Bastion of the Marches, or the rather more mundane Imperial Breakwater. The latter refers to Jewell blunting Zhodani advances into the Marches.\n\nToday, Jewell is something of an armed camp. Small naval bases throughout the system support squadrons of monitors and system defence boats to deny intruders access to the system’s gas giants for refuelling, while the immediate defence of Jewell itself is entrusted to one of the largest non-jump capable fleets outside Core sector. In addition, the naval base is home to the heavier elements of the 212th Fleet as well as battle and cruiser squadrons from the Sector Fleet.\n\nJewell is both militarised and heavily industrialised. There are numerous military bases and many high-tech industrial complexes on-planet. Pollution from the latter is now much worse than the original atmospheric taint. Breathing without a filter mask is possible, if unpleasant, and very short-term exposure is not a serious problem. However, respiratory diseases and a range of cancers can result from even a few hours’ exposure.\n\nClouds of brown smog are a common sight and a layer of grime quickly develops on all external surfaces. For this reason, the exterior of most structures is simply functional and tends to be both drab and filthy. Buildings on Jewell are built for efficiency without regard to aesthetics, at least on the outside.\n\nThe towns and cities of Jewell are like the people to some extent – outwardly unwelcoming but concealing something very different. When able to shed their masks and coveralls, the people of Jewell are friendly and hospitable, although not to Zhodani, and Vargr are also viewed with suspicion in some quarters. That aside, the typical Jewellite (the term Jeweller is both incorrect and liable to provoke a series of centuries-old puns that nobody finds funny but have become something of a social ritual) is demonstrative, loud and fond of strong drink, especially if there are others to share it with. Those returning to Jewell after an absence often run a gauntlet of hugs and warm handshakes from people they only met once, accompanied by a barrage of booze.\n\nThe six billion or so inhabitants are ruled by a bureaucratic government based on the highly structured system implemented during the rapid-colonisation phase of Jewell’s history. Laws are strict and robustly enforced but this causes little resentment. Jewell has been on the front lines in several major wars and its population has a rather unique outlook as a result.\n\nThe majority of citizens are members of one or another of the world’s reserve military, medical or civil defence organisations. These vary from highly efficient organisations to social clubs but all share the same outlook, the feeling that with their traditional enemies just three parsecs away, vigilance is indeed the price of peace.\n\nJewell is easier to get to from the Consulate than the Imperium. Jump-3 vessels can make the crossing into the Regina subsector but ships with shorter legs need to either arrange deep-space refuelling or else make a long transit around neutral space via Plaven and Emerald. As a result, the worlds around Jewell have their own microculture, which also has local variations. It is coloured by Zhodani influences on some worlds, whereas others are vigorously opposed to anything even remotely associated with the ‘Joes’ as the Zhodani are sometimes known.\n",
    "code": "var Component=(()=>{var lr=Object.create;var F=Object.defineProperty;var ur=Object.getOwnPropertyDescriptor;var cr=Object.getOwnPropertyNames;var dr=Object.getPrototypeOf,fr=Object.prototype.hasOwnProperty;var q=(u,n)=>()=>(n||u((n={exports:{}}).exports,n),n.exports),hr=(u,n)=>{for(var v in n)F(u,v,{get:n[v],enumerable:!0})},we=(u,n,v,_)=>{if(n&&typeof n==\"object\"||typeof n==\"function\")for(let g of cr(n))!fr.call(u,g)&&g!==v&&F(u,g,{get:()=>n[g],enumerable:!(_=ur(n,g))||_.enumerable});return u};var pr=(u,n,v)=>(v=u!=null?lr(dr(u)):{},we(n||!u||!u.__esModule?F(v,\"default\",{value:u,enumerable:!0}):v,u)),mr=u=>we(F({},\"__esModule\",{value:!0}),u);var Te=q((wr,Ee)=>{Ee.exports=React});var Re=q(B=>{\"use strict\";(function(){\"use strict\";var u=Te(),n=Symbol.for(\"react.element\"),v=Symbol.for(\"react.portal\"),_=Symbol.for(\"react.fragment\"),g=Symbol.for(\"react.strict_mode\"),Z=Symbol.for(\"react.profiler\"),G=Symbol.for(\"react.provider\"),H=Symbol.for(\"react.context\"),C=Symbol.for(\"react.forward_ref\"),D=Symbol.for(\"react.suspense\"),I=Symbol.for(\"react.suspense_list\"),j=Symbol.for(\"react.memo\"),W=Symbol.for(\"react.lazy\"),je=Symbol.for(\"react.offscreen\"),X=Symbol.iterator,Se=\"@@iterator\";function Ne(e){if(e===null||typeof e!=\"object\")return null;var r=X&&e[X]||e[Se];return typeof r==\"function\"?r:null}var E=u.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function h(e){{for(var r=arguments.length,t=new Array(r>1?r-1:0),a=1;a<r;a++)t[a-1]=arguments[a];Pe(\"error\",e,t)}}function Pe(e,r,t){{var a=E.ReactDebugCurrentFrame,s=a.getStackAddendum();s!==\"\"&&(r+=\"%s\",t=t.concat([s]));var l=t.map(function(i){return String(i)});l.unshift(\"Warning: \"+r),Function.prototype.apply.call(console[e],console,l)}}var ke=!1,Oe=!1,Fe=!1,De=!1,Ie=!1,K;K=Symbol.for(\"react.module.reference\");function We(e){return!!(typeof e==\"string\"||typeof e==\"function\"||e===_||e===Z||Ie||e===g||e===D||e===I||De||e===je||ke||Oe||Fe||typeof e==\"object\"&&e!==null&&(e.$$typeof===W||e.$$typeof===j||e.$$typeof===G||e.$$typeof===H||e.$$typeof===C||e.$$typeof===K||e.getModuleId!==void 0))}function Je(e,r,t){var a=e.displayName;if(a)return a;var s=r.displayName||r.name||\"\";return s!==\"\"?t+\"(\"+s+\")\":t}function Q(e){return e.displayName||\"Context\"}function b(e){if(e==null)return null;if(typeof e.tag==\"number\"&&h(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"),typeof e==\"function\")return e.displayName||e.name||null;if(typeof e==\"string\")return e;switch(e){case _:return\"Fragment\";case v:return\"Portal\";case Z:return\"Profiler\";case g:return\"StrictMode\";case D:return\"Suspense\";case I:return\"SuspenseList\"}if(typeof e==\"object\")switch(e.$$typeof){case H:var r=e;return Q(r)+\".Consumer\";case G:var t=e;return Q(t._context)+\".Provider\";case C:return Je(e,e.render,\"ForwardRef\");case j:var a=e.displayName||null;return a!==null?a:b(e.type)||\"Memo\";case W:{var s=e,l=s._payload,i=s._init;try{return b(i(l))}catch{return null}}}return null}var w=Object.assign,x=0,ee,re,te,ae,ne,oe,ie;function se(){}se.__reactDisabledLog=!0;function ze(){{if(x===0){ee=console.log,re=console.info,te=console.warn,ae=console.error,ne=console.group,oe=console.groupCollapsed,ie=console.groupEnd;var e={configurable:!0,enumerable:!0,value:se,writable:!0};Object.defineProperties(console,{info:e,log:e,warn:e,error:e,group:e,groupCollapsed:e,groupEnd:e})}x++}}function Ye(){{if(x--,x===0){var e={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:w({},e,{value:ee}),info:w({},e,{value:re}),warn:w({},e,{value:te}),error:w({},e,{value:ae}),group:w({},e,{value:ne}),groupCollapsed:w({},e,{value:oe}),groupEnd:w({},e,{value:ie})})}x<0&&h(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\")}}var J=E.ReactCurrentDispatcher,z;function S(e,r,t){{if(z===void 0)try{throw Error()}catch(s){var a=s.stack.trim().match(/\\n( *(at )?)/);z=a&&a[1]||\"\"}return`\n`+z+e}}var Y=!1,N;{var $e=typeof WeakMap==\"function\"?WeakMap:Map;N=new $e}function le(e,r){if(!e||Y)return\"\";{var t=N.get(e);if(t!==void 0)return t}var a;Y=!0;var s=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var l;l=J.current,J.current=null,ze();try{if(r){var i=function(){throw Error()};if(Object.defineProperty(i.prototype,\"props\",{set:function(){throw Error()}}),typeof Reflect==\"object\"&&Reflect.construct){try{Reflect.construct(i,[])}catch(y){a=y}Reflect.construct(e,[],i)}else{try{i.call()}catch(y){a=y}e.call(i.prototype)}}else{try{throw Error()}catch(y){a=y}e()}}catch(y){if(y&&a&&typeof y.stack==\"string\"){for(var o=y.stack.split(`\n`),p=a.stack.split(`\n`),c=o.length-1,d=p.length-1;c>=1&&d>=0&&o[c]!==p[d];)d--;for(;c>=1&&d>=0;c--,d--)if(o[c]!==p[d]){if(c!==1||d!==1)do if(c--,d--,d<0||o[c]!==p[d]){var m=`\n`+o[c].replace(\" at new \",\" at \");return e.displayName&&m.includes(\"<anonymous>\")&&(m=m.replace(\"<anonymous>\",e.displayName)),typeof e==\"function\"&&N.set(e,m),m}while(c>=1&&d>=0);break}}}finally{Y=!1,J.current=l,Ye(),Error.prepareStackTrace=s}var R=e?e.displayName||e.name:\"\",_e=R?S(R):\"\";return typeof e==\"function\"&&N.set(e,_e),_e}function Me(e,r,t){return le(e,!1)}function Ve(e){var r=e.prototype;return!!(r&&r.isReactComponent)}function P(e,r,t){if(e==null)return\"\";if(typeof e==\"function\")return le(e,Ve(e));if(typeof e==\"string\")return S(e);switch(e){case D:return S(\"Suspense\");case I:return S(\"SuspenseList\")}if(typeof e==\"object\")switch(e.$$typeof){case C:return Me(e.render);case j:return P(e.type,r,t);case W:{var a=e,s=a._payload,l=a._init;try{return P(l(s),r,t)}catch{}}}return\"\"}var k=Object.prototype.hasOwnProperty,ue={},ce=E.ReactDebugCurrentFrame;function O(e){if(e){var r=e._owner,t=P(e.type,e._source,r?r.type:null);ce.setExtraStackFrame(t)}else ce.setExtraStackFrame(null)}function Le(e,r,t,a,s){{var l=Function.call.bind(k);for(var i in e)if(l(e,i)){var o=void 0;try{if(typeof e[i]!=\"function\"){var p=Error((a||\"React class\")+\": \"+t+\" type `\"+i+\"` is invalid; it must be a function, usually from the `prop-types` package, but received `\"+typeof e[i]+\"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");throw p.name=\"Invariant Violation\",p}o=e[i](r,i,a,t,null,\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\")}catch(c){o=c}o&&!(o instanceof Error)&&(O(s),h(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\",a||\"React class\",t,i,typeof o),O(null)),o instanceof Error&&!(o.message in ue)&&(ue[o.message]=!0,O(s),h(\"Failed %s type: %s\",t,o.message),O(null))}}}var Ue=Array.isArray;function $(e){return Ue(e)}function qe(e){{var r=typeof Symbol==\"function\"&&Symbol.toStringTag,t=r&&e[Symbol.toStringTag]||e.constructor.name||\"Object\";return t}}function Be(e){try{return de(e),!1}catch{return!0}}function de(e){return\"\"+e}function fe(e){if(Be(e))return h(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\",qe(e)),de(e)}var A=E.ReactCurrentOwner,Ze={key:!0,ref:!0,__self:!0,__source:!0},he,pe,M;M={};function Ge(e){if(k.call(e,\"ref\")){var r=Object.getOwnPropertyDescriptor(e,\"ref\").get;if(r&&r.isReactWarning)return!1}return e.ref!==void 0}function He(e){if(k.call(e,\"key\")){var r=Object.getOwnPropertyDescriptor(e,\"key\").get;if(r&&r.isReactWarning)return!1}return e.key!==void 0}function Xe(e,r){if(typeof e.ref==\"string\"&&A.current&&r&&A.current.stateNode!==r){var t=b(A.current.type);M[t]||(h('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',b(A.current.type),e.ref),M[t]=!0)}}function Ke(e,r){{var t=function(){he||(he=!0,h(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"key\",{get:t,configurable:!0})}}function Qe(e,r){{var t=function(){pe||(pe=!0,h(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\",r))};t.isReactWarning=!0,Object.defineProperty(e,\"ref\",{get:t,configurable:!0})}}var er=function(e,r,t,a,s,l,i){var o={$$typeof:n,type:e,key:r,ref:t,props:i,_owner:l};return o._store={},Object.defineProperty(o._store,\"validated\",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(o,\"_self\",{configurable:!1,enumerable:!1,writable:!1,value:a}),Object.defineProperty(o,\"_source\",{configurable:!1,enumerable:!1,writable:!1,value:s}),Object.freeze&&(Object.freeze(o.props),Object.freeze(o)),o};function rr(e,r,t,a,s){{var l,i={},o=null,p=null;t!==void 0&&(fe(t),o=\"\"+t),He(r)&&(fe(r.key),o=\"\"+r.key),Ge(r)&&(p=r.ref,Xe(r,s));for(l in r)k.call(r,l)&&!Ze.hasOwnProperty(l)&&(i[l]=r[l]);if(e&&e.defaultProps){var c=e.defaultProps;for(l in c)i[l]===void 0&&(i[l]=c[l])}if(o||p){var d=typeof e==\"function\"?e.displayName||e.name||\"Unknown\":e;o&&Ke(i,d),p&&Qe(i,d)}return er(e,o,p,s,a,A.current,i)}}var V=E.ReactCurrentOwner,me=E.ReactDebugCurrentFrame;function T(e){if(e){var r=e._owner,t=P(e.type,e._source,r?r.type:null);me.setExtraStackFrame(t)}else me.setExtraStackFrame(null)}var L;L=!1;function U(e){return typeof e==\"object\"&&e!==null&&e.$$typeof===n}function ve(){{if(V.current){var e=b(V.current.type);if(e)return`\n\nCheck the render method of \\``+e+\"`.\"}return\"\"}}function tr(e){{if(e!==void 0){var r=e.fileName.replace(/^.*[\\\\\\/]/,\"\"),t=e.lineNumber;return`\n\nCheck your code at `+r+\":\"+t+\".\"}return\"\"}}var be={};function ar(e){{var r=ve();if(!r){var t=typeof e==\"string\"?e:e.displayName||e.name;t&&(r=`\n\nCheck the top-level render call using <`+t+\">.\")}return r}}function ye(e,r){{if(!e._store||e._store.validated||e.key!=null)return;e._store.validated=!0;var t=ar(r);if(be[t])return;be[t]=!0;var a=\"\";e&&e._owner&&e._owner!==V.current&&(a=\" It was passed a child from \"+b(e._owner.type)+\".\"),T(e),h('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',t,a),T(null)}}function ge(e,r){{if(typeof e!=\"object\")return;if($(e))for(var t=0;t<e.length;t++){var a=e[t];U(a)&&ye(a,r)}else if(U(e))e._store&&(e._store.validated=!0);else if(e){var s=Ne(e);if(typeof s==\"function\"&&s!==e.entries)for(var l=s.call(e),i;!(i=l.next()).done;)U(i.value)&&ye(i.value,r)}}}function nr(e){{var r=e.type;if(r==null||typeof r==\"string\")return;var t;if(typeof r==\"function\")t=r.propTypes;else if(typeof r==\"object\"&&(r.$$typeof===C||r.$$typeof===j))t=r.propTypes;else return;if(t){var a=b(r);Le(t,e.props,\"prop\",a,e)}else if(r.PropTypes!==void 0&&!L){L=!0;var s=b(r);h(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\",s||\"Unknown\")}typeof r.getDefaultProps==\"function\"&&!r.getDefaultProps.isReactClassApproved&&h(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\")}}function or(e){{for(var r=Object.keys(e.props),t=0;t<r.length;t++){var a=r[t];if(a!==\"children\"&&a!==\"key\"){T(e),h(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\",a),T(null);break}}e.ref!==null&&(T(e),h(\"Invalid attribute `ref` supplied to `React.Fragment`.\"),T(null))}}function ir(e,r,t,a,s,l){{var i=We(e);if(!i){var o=\"\";(e===void 0||typeof e==\"object\"&&e!==null&&Object.keys(e).length===0)&&(o+=\" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");var p=tr(s);p?o+=p:o+=ve();var c;e===null?c=\"null\":$(e)?c=\"array\":e!==void 0&&e.$$typeof===n?(c=\"<\"+(b(e.type)||\"Unknown\")+\" />\",o=\" Did you accidentally export a JSX literal instead of a component?\"):c=typeof e,h(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\",c,o)}var d=rr(e,r,t,s,l);if(d==null)return d;if(i){var m=r.children;if(m!==void 0)if(a)if($(m)){for(var R=0;R<m.length;R++)ge(m[R],e);Object.freeze&&Object.freeze(m)}else h(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");else ge(m,e)}return e===_?or(d):nr(d),d}}var sr=ir;B.Fragment=_,B.jsxDEV=sr})()});var Ae=q((Tr,xe)=>{\"use strict\";xe.exports=Re()});var gr={};hr(gr,{default:()=>yr,frontmatter:()=>vr});var f=pr(Ae()),vr={title:\"Jewell\",description:null,aliases:null,tags:null};function Ce(u){let n=Object.assign({p:\"p\"},u.components);return(0,f.jsxDEV)(f.Fragment,{children:[(0,f.jsxDEV)(n.p,{children:\"Jewell is indeed a thing of great value; a more or less Terra-Prime world marred only by a slight atmospheric taint caused by volcanic outgassing. With very similar gravity and weather conditions to Earth, the world was highly suitable for colonisation. The first settlement was established around 320 and conducted in an ad-hoc manner without Imperial oversight.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:7,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"It was the discovery of Lanthanum deposits, some time later, that caused a much more focussed colonisation programme to be launched, leading to industrialisation and a rapid advance in technological sophistication. Jewell was used as a forward base for further expansion into the Cronor subsector.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:9,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"As tensions with the Zhodani Consulate grew, a squadron of naval vessels was deployed to the Jewell system and a base was set up to support them. This was a small installation, which was donated to the Scout Service when the Navy built a much larger base around 480.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:11,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"A larger scout base was deployed a few years later and the original naval facility abandoned for a long time. Scout vessels from this base worked the communications route back into Regina via Efate and conducted both exploration and intelligence-gathering operations along the frontier. The Navy meanwhile engaged in cold war operations along the border, shadowing Zhodani ships and trying to intimidate the Consulate.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:13,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"When conflict inevitably occurred, Jewell was on the front line. The system squadron and Imperial Navy forces put up a valiant fight but could not prevent the capture of the world by the Consulate in 592. Some sources claim that Grand Admiral Olav Hault-Plankwell personally led the campaign to retake the world in 603, although others disagree. Contrary to popular docu-drama clich\\xE9, he certainly did not take part in the ground fighting to retake the downport.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:15,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"Jewell was strongly garrisoned after the war and has remained so ever since. During the Second Frontier War, the world came under siege for several months in 617 but held out successfully. Afterward, the scale of the world\\u2019s defences was increased yet again, with the original naval base re-opened and several other facilities constructed throughout the system. Although attacked in the Third and Fourth Frontier Wars, Jewell was able to not only repel the assault fleets but act as a base for operations into the Zhodani rear, gaining the world the somewhat fanciful media nickname of Jewell: Shining Bastion of the Marches, or the rather more mundane Imperial Breakwater. The latter refers to Jewell blunting Zhodani advances into the Marches.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:17,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"Today, Jewell is something of an armed camp. Small naval bases throughout the system support squadrons of monitors and system defence boats to deny intruders access to the system\\u2019s gas giants for refuelling, while the immediate defence of Jewell itself is entrusted to one of the largest non-jump capable fleets outside Core sector. In addition, the naval base is home to the heavier elements of the 212th Fleet as well as battle and cruiser squadrons from the Sector Fleet.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:19,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"Jewell is both militarised and heavily industrialised. There are numerous military bases and many high-tech industrial complexes on-planet. Pollution from the latter is now much worse than the original atmospheric taint. Breathing without a filter mask is possible, if unpleasant, and very short-term exposure is not a serious problem. However, respiratory diseases and a range of cancers can result from even a few hours\\u2019 exposure.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:21,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"Clouds of brown smog are a common sight and a layer of grime quickly develops on all external surfaces. For this reason, the exterior of most structures is simply functional and tends to be both drab and filthy. Buildings on Jewell are built for efficiency without regard to aesthetics, at least on the outside.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:23,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"The towns and cities of Jewell are like the people to some extent \\u2013 outwardly unwelcoming but concealing something very different. When able to shed their masks and coveralls, the people of Jewell are friendly and hospitable, although not to Zhodani, and Vargr are also viewed with suspicion in some quarters. That aside, the typical Jewellite (the term Jeweller is both incorrect and liable to provoke a series of centuries-old puns that nobody finds funny but have become something of a social ritual) is demonstrative, loud and fond of strong drink, especially if there are others to share it with. Those returning to Jewell after an absence often run a gauntlet of hugs and warm handshakes from people they only met once, accompanied by a barrage of booze.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:25,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"The six billion or so inhabitants are ruled by a bureaucratic government based on the highly structured system implemented during the rapid-colonisation phase of Jewell\\u2019s history. Laws are strict and robustly enforced but this causes little resentment. Jewell has been on the front lines in several major wars and its population has a rather unique outlook as a result.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:27,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"The majority of citizens are members of one or another of the world\\u2019s reserve military, medical or civil defence organisations. These vary from highly efficient organisations to social clubs but all share the same outlook, the feeling that with their traditional enemies just three parsecs away, vigilance is indeed the price of peace.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:29,columnNumber:1},this),`\n`,(0,f.jsxDEV)(n.p,{children:\"Jewell is easier to get to from the Consulate than the Imperium. Jump-3 vessels can make the crossing into the Regina subsector but ships with shorter legs need to either arrange deep-space refuelling or else make a long transit around neutral space via Plaven and Emerald. As a result, the worlds around Jewell have their own microculture, which also has local variations. It is coloured by Zhodani influences on some worlds, whereas others are vigorously opposed to anything even remotely associated with the \\u2018Joes\\u2019 as the Zhodani are sometimes known.\"},void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:31,columnNumber:1},this)]},void 0,!0,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\",lineNumber:1,columnNumber:1},this)}function br(u={}){let{wrapper:n}=u.components||{};return n?(0,f.jsxDEV)(n,Object.assign({},u,{children:(0,f.jsxDEV)(Ce,u,void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\"},this)}),void 0,!1,{fileName:\"E:\\\\Traveller-App-Azure\\\\src\\\\content\\\\library\\\\encyclopedia\\\\chartered space\\\\sectors\\\\the_spinward_marches\\\\subsectors\\\\jewell\\\\_mdx_bundler_entry_point-26212948-4242-4423-81e1-ae679568ee6a.mdx\"},this):Ce(u)}var yr=br;return mr(gr);})();\n/*! Bundled license information:\n\nreact/cjs/react-jsx-dev-runtime.development.js:\n  (**\n   * @license React\n   * react-jsx-dev-runtime.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *)\n*/\n;return Component;"
  },
  "_id": "library/encyclopedia/chartered space/sectors/the_spinward_marches/subsectors/jewell/Jewell.md",
  "_raw": {
    "sourceFilePath": "library/encyclopedia/chartered space/sectors/the_spinward_marches/subsectors/jewell/Jewell.md",
    "sourceFileName": "Jewell.md",
    "sourceFileDir": "library/encyclopedia/chartered space/sectors/the_spinward_marches/subsectors/jewell",
    "contentType": "markdown",
    "flattenedPath": "library/encyclopedia/chartered space/sectors/the_spinward_marches/subsectors/jewell/Jewell"
  },
  "type": "Doc",
  "slug": "/library/encyclopedia/chartered space/sectors/the_spinward_marches/subsectors/jewell/Jewell",
  "slugAsParams": "encyclopedia/chartered space/sectors/the_spinward_marches/subsectors/jewell/Jewell"
}